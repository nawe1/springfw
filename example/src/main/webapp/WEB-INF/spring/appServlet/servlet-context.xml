<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<!--  @Controller와 같은 에노테이션을 활성화해주는 요소 -->
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" /> 
	<!-- resources로 직접 접근이 안되기때문에  mapping으로 resources/**로 값을 찾는다면 location 을 통해 resources 파일 위치로 이동시켜주기 위해 있는 녀석 -->

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.kh.spring" />
	<!-- base-package에서 설정된 패키지와 그 하위에 존재하는 모든 패키지를 감시해서
		 등록가능한 도구(@Component)를 모두 찾아서 자동으로 빈으로 등록해주는 요소
		 servlet-context.xml은 최대한 안건드리는게 좋다.	 
	 -->
	
	<!-- 
		handelerMapping을 위해서 어떤 Mapping이 왔을떄 어떤 Controller가 구동할건지 등록해야함!
		
	 -->
	
</beans:beans>
